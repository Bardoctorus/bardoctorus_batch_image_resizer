

































argparse - (take url OR folder we are in, dimension int)

main (argFold,argwidth): 
    for picture in argFold:
        get dimensions

        if image dimension > desired dimension -> Send to fn make_smaller
        elif image dimension < desired dimension -> Send to fn make_bigga
        else CONTINUE Do nothing because its already the right size


        send dimension and argwidth to sizer depending on direction.
        make new file with extension
                

fn make_bigga:
    #bigly stuff like 

fn make_small:
    #smol stuff like 

fn save(file):
    if there_isn't_a_folder:
        var = make a folder
file name = original name + new width
save file in folder var


    
Ratio maths :  adjusted height = <user-chosen width> * original height / original width.

sizer(height, width, newWidth):

    newHeight = newWidth * height/width

    


    _____

from PIL import Image
import os
import argparse




#  main thing takes folder and width for fun times
def main(argFolder, argDimensions):
    print(argFolder, type(argFolder))
    
    if argDimensions != type(int):
        try:            
            argDimensions = int(argDimensions)
           
            print(argDimensions, type(argDimensions))
        except:
            print("New width must be an integer, exiting")
            sys.exit(1)
      
    if not os.path.exists(argFolder):
        print("Folder no")



        

    



if __name__ == "__main__":
    path = input("Enter folder path, or leave blank to use current folder.\n.")
    if path == "":
        path = os.getcwd()
    size = input("Enter new width.\n.")
    
    
    main(path, size)
